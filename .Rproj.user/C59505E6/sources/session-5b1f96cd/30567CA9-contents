library(ggplot2)
library(lme4)
library(dplyr)

mri_adni_data_bl_delta_age = read.csv('MRI_Data_With_Baseline_DeltaAge.csv',stringsAsFactors = T)
mri_adni_data_bl_delta_age$APOE = as.factor(mri_adni_data_bl_delta_age$APOE)
mri_adni_data_bl_delta_age$PTGENDER = as.factor(mri_adni_data_bl_delta_age$PTGENDER)

og = lmer(HippVol ~ 1 + Actual_Age+PTGENDER+APOE+log(ICV)+delta_age + (1 + year|RID),mri_adni_data_bl_delta_age, REML = FALSE)
og.n = lmer(HippVol ~ 1 + Actual_Age+PTGENDER+APOE+log(ICV) +(1 + year|RID),mri_adni_data_bl_delta_age, REML = FALSE)
anova(og,og.n)

og = lmer(entorhinal_thickness ~ 1 + Actual_Age+PTGENDER+APOE+log(ICV)+delta_age + year + (1 + year|RID),mri_adni_data_bl_delta_age, REML = FALSE)
og.n = lmer(entorhinal_thickness ~ 1 + Actual_Age+PTGENDER+APOE+log(ICV) + delta_age + year + (1 + year|RID),mri_adni_data_bl_delta_age, REML = FALSE)
anova(og,og.n)


# Define quartiles of delta_age
quartiles <- quantile(mri_adni_data_bl_delta_age$delta_age, probs = c(0, 0.25, 0.5, 0.75, 1))

# Create a new column with quartile labels
mri_adni_data_bl_delta_age$delta_age_quartile <- cut(mri_adni_data_bl_delta_age$delta_age, breaks = quartiles, labels = c("Q1", "Q2", "Q3", "Q4"), include.lowest = TRUE)

# Install package to predict for lmer
install.packages("remotes")
remotes::install_github("RemkoDuursma/bootpredictlme4")
library(bootpredictlme4)

# If you use og as the final model
pred1=predict(og,re.form=NA,se.fit=TRUE,nsim=500)

# save prediction results
Long_MRI=mri_adni_data_bl_delta_age
Long_MRI$boot_fit=pred1$fit

# Only plot Q1 and Q4 
plot_Q1Q4=Long_MRI%>%filter(delta_age_quartile=="Q1"|delta_age_quartile=="Q4")   

# Can change colors, linewidth, x labels, y labels or add title as needed
ggplot(plot_Q1Q4,aes(x=year,y=boot_fit,col=delta_age_quartile))+geom_smooth(aes(year,boot_fit),linewidth=1.5,method=lm,se=TRUE)+
  ylab("HippVol_pred")+xlab("Year")+ggtitle("")+scale_color_manual(values=c("blue","red")) 
